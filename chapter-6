信号


	1.sigqueue() 使用；
	
	#include <stdio.h>
	#include <stdlib.h>
	#include <unistd.h>
	#include <signal.h>
	
	void new_op(int signum, siginfo_t *info, void *myact)
	{
		int i;
		for(i = 0; i < 10; i++){
			printf("%c ", *((char *) (info ->si_ptr) + i));
		}	
		//printf("%d\n", info->si_int);
		printf("handle signal %d over; \n", signum);
	}
	
	int main(int argc, char *argv[])
	{
		struct sigaction act;
		union sigvla mysigval;
		int i;
		int sig;
		pit_t pit;
		char data[10];
		
		memset(data, 0, sizeof(data));
		for(i = 0; i < 5; i++)
		{
			data[i] = '1' + i;
		}
		mysig.sival_int = 555;
		//mysig.sval_ptr = data;
		
		sig = atoi(argv[1]);
		pid = getpid();
		
		act.sa_sigaction = new_op;
		sigemptyset(&act.sa_mask);
		act.flag = SA_SIGINFO;
		
		if(sigaction(sig, &act, NULL))
			printf("install signal error\n");
		while(1)
		{
			sleep(2);
			printf("wait for the signal\n);
			sigqueue(pid, sig, mysigval);
		}
		
		return 0;
	}
